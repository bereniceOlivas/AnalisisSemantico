package automatas;

/* Generated By:JavaCC: Do not edit this line. CompilacionConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CompilacionConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ASIGNACION = 1;
  /** RegularExpression Id. */
  int PLUS = 2;
  /** RegularExpression Id. */
  int MINUS = 3;
  /** RegularExpression Id. */
  int MULTIPLY = 4;
  /** RegularExpression Id. */
  int DIVIDE = 5;
  /** RegularExpression Id. */
  int INCR = 6;
  /** RegularExpression Id. */
  int DECR = 7;
  /** RegularExpression Id. */
  int PUBLIC = 8;
  /** RegularExpression Id. */
  int PRIVATE = 9;
  /** RegularExpression Id. */
  int STATIC = 10;
  /** RegularExpression Id. */
  int VOID = 11;
  /** RegularExpression Id. */
  int MAIN = 12;
  /** RegularExpression Id. */
  int PROGRAMA = 13;
  /** RegularExpression Id. */
  int IF = 14;
  /** RegularExpression Id. */
  int ELSE = 15;
  /** RegularExpression Id. */
  int ELSEIF = 16;
  /** RegularExpression Id. */
  int FOR = 17;
  /** RegularExpression Id. */
  int SWITCH = 18;
  /** RegularExpression Id. */
  int CASE = 19;
  /** RegularExpression Id. */
  int BREAK = 20;
  /** RegularExpression Id. */
  int DEFAUL = 21;
  /** RegularExpression Id. */
  int DO = 22;
  /** RegularExpression Id. */
  int WHILE = 23;
  /** RegularExpression Id. */
  int WRITE = 24;
  /** RegularExpression Id. */
  int READ = 25;
  /** RegularExpression Id. */
  int LPAREN = 26;
  /** RegularExpression Id. */
  int RPAREN = 27;
  /** RegularExpression Id. */
  int LBRACE = 28;
  /** RegularExpression Id. */
  int RBRACE = 29;
  /** RegularExpression Id. */
  int LBRACKET = 30;
  /** RegularExpression Id. */
  int RBRACKET = 31;
  /** RegularExpression Id. */
  int SEMICOLON = 32;
  /** RegularExpression Id. */
  int COMMA = 33;
  /** RegularExpression Id. */
  int DOT = 34;
  /** RegularExpression Id. */
  int DOUBLECOMMA = 35;
  /** RegularExpression Id. */
  int EQ = 36;
  /** RegularExpression Id. */
  int LE = 37;
  /** RegularExpression Id. */
  int MN = 38;
  /** RegularExpression Id. */
  int GE = 39;
  /** RegularExpression Id. */
  int GR = 40;
  /** RegularExpression Id. */
  int NE = 41;
  /** RegularExpression Id. */
  int OR = 42;
  /** RegularExpression Id. */
  int AND = 43;
  /** RegularExpression Id. */
  int INT = 44;
  /** RegularExpression Id. */
  int DEC = 45;
  /** RegularExpression Id. */
  int CHR = 46;
  /** RegularExpression Id. */
  int STR = 47;
  /** RegularExpression Id. */
  int NUMBER = 48;
  /** RegularExpression Id. */
  int IDENTIFIER = 49;
  /** RegularExpression Id. */
  int DECIMAL = 50;
  /** RegularExpression Id. */
  int CADENA = 51;
  /** RegularExpression Id. */
  int CARAC = 52;
  /** RegularExpression Id. */
  int DOUBLEPOINT = 53;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\"--\"",
    "\"public\"",
    "\"private\"",
    "\"static\"",
    "\"void\"",
    "\"public static void Main()\"",
    "\"Programa\"",
    "\"ien\"",
    "\"iotro\"",
    "\"ien otro\"",
    "\"irepetir\"",
    "\"ialternativa\"",
    "\"iopcion\"",
    "\"itermina\"",
    "\"ipredef\"",
    "\"ia\"",
    "\"iespera\"",
    "\"iescribir\"",
    "\"ileer\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"\\\"\"",
    "\"==\"",
    "\"<=\"",
    "\"<\"",
    "\">=\"",
    "\">\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"inum\"",
    "\"idec\"",
    "\"ichr\"",
    "\"istr\"",
    "<NUMBER>",
    "<IDENTIFIER>",
    "<DECIMAL>",
    "<CADENA>",
    "<CARAC>",
    "\":\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
  };

}
